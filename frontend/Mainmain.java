import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

public class Mainmain {
    private static JFrame frame;
    private static JPanel messagesPanel;
    private static List<String> conversationHistory = new ArrayList<>();
    private static int currentChat = 0; // 0: –î–∏–∑–∞–π–Ω-—Å—Ç—É–¥–∏—è, 1: –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, 2: –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞

    // –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —á–∞—Ç–æ–≤
    private static String[][] chatMessages = {
            {
                    "–ê–Ω–Ω–∞ –î–∏–∑–∞–π–Ω–µ—Ä: –ü—Ä–∏–≤–µ—Ç! –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –Ω–æ–≤—ã–π –∫–æ–Ω—Ü–µ–ø—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.",
                    "–í—ã: –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è! –û—Å–æ–±–µ–Ω–Ω–æ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.",
                    "–ú–∞–∫—Å –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –Ø —É–∂–µ –Ω–∞—á–∞–ª —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —ç—Ç–æ—Ç –¥–∏–∑–∞–π–Ω.",
                    "–í—ã: –û—Ç–ª–∏—á–Ω–æ! –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –º–∏–∫—Ä–æ–≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è."
            },
            {
                    "–ê–Ω–Ω–∞: –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –Ω–∞—Å—á–µ—Ç –≤—Å—Ç—Ä–µ—á–∏ –∑–∞–≤—Ç—Ä–∞?",
                    "–í—ã: –ö–æ–Ω–µ—á–Ω–æ! –í 15:00 –ø–æ–¥–æ–π–¥–µ—Ç?",
                    "–ê–Ω–Ω–∞: –ò–¥–µ–∞–ª—å–Ω–æ! –ü–æ–∫–∞–∂—É –Ω–æ–≤—ã–µ –º–∞–∫–µ—Ç—ã."
            },
            {
                    "–ú–∞–∫—Å: –ù–∞—à–µ–ª –±–∞–≥ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –º–æ–¥—É–ª–µ.",
                    "–û–ª—è: –°—Ä–æ—á–Ω–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å!",
                    "–ò–≤–∞–Ω: –Ø –º–æ–≥—É –ø–æ–º–æ—á—å —Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º.",
                    "–í—ã: –î–∞–≤–∞–π—Ç–µ —Å–æ–±–µ—Ä–µ–º—Å—è –≤ 16:00 –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è."
            }
    };

    private static String[] chatNames = {"–î–∏–∑–∞–π–Ω-—Å—Ç—É–¥–∏—è", "–ê–Ω–Ω–∞ –î–∏–∑–∞–π–Ω–µ—Ä", "–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞"};
    private static String[] chatDescriptions = {"–û–±—Å—É–∂–¥–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∏–¥–µ–∏", "–õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è", "–†–∞–±–æ—á–∏–µ –≤–æ–ø—Ä–æ—Å—ã"};

    public static void main(String[] args) {
        // –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
        frame = new JFrame("Nexus Messenger");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(1000, 700);
        frame.setLayout(new BorderLayout());
        frame.getContentPane().setBackground(new Color(26, 28, 35));

        // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–Ω–µ–ª—å —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏
        JSplitPane splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);
        splitPane.setDividerLocation(250);
        splitPane.setDividerSize(2);
        splitPane.setContinuousLayout(true);

        // –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
        JPanel chatsPanel = createChatsPanel();

        // –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - —Ç–µ–∫—É—â–∏–π —á–∞—Ç
        JPanel chatPanel = createChatPanel();

        splitPane.setLeftComponent(chatsPanel);
        splitPane.setRightComponent(chatPanel);

        frame.add(splitPane, BorderLayout.CENTER);

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –±–∞—Ä
        JPanel statusBar = new JPanel(new FlowLayout(FlowLayout.RIGHT));
        statusBar.setBackground(new Color(42, 44, 51));
        JLabel status = new JLabel("Status: Online ‚óè");
        status.setForeground(new Color(105, 240, 174));
        statusBar.add(status);
        statusBar.setBorder(BorderFactory.createEmptyBorder(5, 0, 5, 20));

        frame.add(statusBar, BorderLayout.SOUTH);
        frame.setVisible(true);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—ã–π —á–∞—Ç
        loadChat(0);
    }

    private static JPanel createChatsPanel() {
        JPanel chatsPanel = new JPanel();
        chatsPanel.setLayout(new BorderLayout());
        chatsPanel.setBackground(new Color(42, 44, 51));
        chatsPanel.setPreferredSize(new Dimension(250, frame.getHeight()));

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        JLabel title = new JLabel("–ß–∞—Ç—ã", SwingConstants.CENTER);
        title.setFont(new Font("Segoe UI", Font.BOLD, 20));
        title.setForeground(new Color(245, 247, 255));
        title.setBorder(BorderFactory.createEmptyBorder(20, 0, 20, 0));
        chatsPanel.add(title, BorderLayout.NORTH);

        // –ü–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ —á–∞—Ç–æ–≤
        JPanel chatListPanel = new JPanel();
        chatListPanel.setLayout(new BoxLayout(chatListPanel, BoxLayout.Y_AXIS));
        chatListPanel.setBackground(new Color(42, 44, 51));

        // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
        for (int i = 0; i < chatNames.length; i++) {
            JPanel chatItem = createChatItem(chatNames[i], chatDescriptions[i], i);
            chatListPanel.add(chatItem);
        }

        JScrollPane scrollPane = new JScrollPane(chatListPanel);
        scrollPane.setBorder(BorderFactory.createEmptyBorder());
        scrollPane.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        chatsPanel.add(scrollPane, BorderLayout.CENTER);

        return chatsPanel;
    }

    private static JPanel createChatItem(String name, String description, int chatId) {
        JPanel chatItem = new JPanel();
        chatItem.setLayout(new BorderLayout());
        chatItem.setBackground(new Color(42, 44, 51));
        chatItem.setBorder(BorderFactory.createEmptyBorder(10, 15, 10, 15));
        chatItem.setCursor(new Cursor(Cursor.HAND_CURSOR));

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        chatItem.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                loadChat(chatId);
            }

            @Override
            public void mouseEntered(MouseEvent e) {
                chatItem.setBackground(new Color(60, 62, 70));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                chatItem.setBackground(new Color(42, 44, 51));
            }
        });

        JLabel nameLabel = new JLabel(name);
        nameLabel.setFont(new Font("Segoe UI", Font.BOLD, 16));
        nameLabel.setForeground(new Color(245, 247, 255));

        JLabel descLabel = new JLabel(description);
        descLabel.setFont(new Font("Segoe UI", Font.PLAIN, 12));
        descLabel.setForeground(new Color(180, 180, 190));

        JPanel textPanel = new JPanel();
        textPanel.setLayout(new BoxLayout(textPanel, BoxLayout.Y_AXIS));
        textPanel.setBackground(new Color(42, 44, 51));
        textPanel.add(nameLabel);
        textPanel.add(descLabel);

        chatItem.add(textPanel, BorderLayout.CENTER);

        // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        JLabel unreadLabel = new JLabel("3");
        unreadLabel.setFont(new Font("Segoe UI", Font.BOLD, 12));
        unreadLabel.setForeground(Color.WHITE);
        unreadLabel.setBackground(new Color(126, 87, 194));
        unreadLabel.setOpaque(true);
        unreadLabel.setBorder(BorderFactory.createEmptyBorder(3, 8, 3, 8));
        unreadLabel.setPreferredSize(new Dimension(25, 20));
        unreadLabel.setHorizontalAlignment(SwingConstants.CENTER);

        // –°–¥–µ–ª–∞–µ–º –∫—Ä—É–≥–ª—É—é —Ñ–æ—Ä–º—É –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
        unreadLabel.setBorder(BorderFactory.createEmptyBorder(3, 8, 3, 8));

        chatItem.add(unreadLabel, BorderLayout.EAST);

        return chatItem;
    }

    private static JPanel createChatPanel() {
        JPanel chatPanel = new JPanel();
        chatPanel.setLayout(new BorderLayout());
        chatPanel.setBackground(new Color(35, 37, 44));

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞
        JPanel headerPanel = new JPanel(new BorderLayout());
        headerPanel.setBackground(new Color(42, 44, 51));
        headerPanel.setBorder(BorderFactory.createEmptyBorder(15, 20, 15, 20));
        headerPanel.setPreferredSize(new Dimension(frame.getWidth(), 70));

        JLabel chatTitle = new JLabel("–î–∏–∑–∞–π–Ω-—Å—Ç—É–¥–∏—è");
        chatTitle.setFont(new Font("Segoe UI", Font.BOLD, 20));
        chatTitle.setForeground(new Color(245, 247, 255));

        JLabel chatDesc = new JLabel("–û–±—Å—É–∂–¥–∞–µ–º –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∏–¥–µ–∏");
        chatDesc.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        chatDesc.setForeground(new Color(180, 180, 190));

        JPanel titlePanel = new JPanel();
        titlePanel.setLayout(new BoxLayout(titlePanel, BoxLayout.Y_AXIS));
        titlePanel.setBackground(new Color(42, 44, 51));
        titlePanel.add(chatTitle);
        titlePanel.add(chatDesc);

        headerPanel.add(titlePanel, BorderLayout.WEST);

        // –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
        JPanel actionPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 10, 0));
        actionPanel.setBackground(new Color(42, 44, 51));

        JButton callButton = createHeaderButton("üìû");
        JButton videoButton = createHeaderButton("üé•");
        JButton infoButton = createHeaderButton("‚ìò");

        actionPanel.add(callButton);
        actionPanel.add(videoButton);
        actionPanel.add(infoButton);

        headerPanel.add(actionPanel, BorderLayout.EAST);

        chatPanel.add(headerPanel, BorderLayout.NORTH);

        // –ü–∞–Ω–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π
        messagesPanel = new JPanel();
        messagesPanel.setLayout(new BoxLayout(messagesPanel, BoxLayout.Y_AXIS));
        messagesPanel.setBackground(new Color(35, 37, 44));
        messagesPanel.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

        JScrollPane scrollPane = new JScrollPane(messagesPanel);
        scrollPane.setBorder(BorderFactory.createEmptyBorder());
        scrollPane.getVerticalScrollBar().setUI(new CustomScrollBarUI());
        scrollPane.getVerticalScrollBar().setUnitIncrement(16);

        chatPanel.add(scrollPane, BorderLayout.CENTER);

        // –ü–∞–Ω–µ–ª—å –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        JPanel inputPanel = new JPanel(new BorderLayout());
        inputPanel.setBackground(new Color(42, 44, 51));
        inputPanel.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));

        JTextField messageField = new JTextField();
        messageField.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        messageField.setBackground(new Color(60, 62, 70));
        messageField.setForeground(Color.WHITE);
        messageField.setCaretColor(Color.WHITE);
        messageField.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(new Color(80, 82, 90)),
                BorderFactory.createEmptyBorder(10, 15, 10, 15)
        ));

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ Enter
        messageField.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                sendMessage(messageField.getText());
                messageField.setText("");
            }
        });

        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 5, 0));
        buttonPanel.setBackground(new Color(42, 44, 51));

        JButton emojiButton = createInputButton("üòä");
        JButton attachButton = createInputButton("üìé");
        JButton sendButton = createInputButton("‚û§");

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –∫–Ω–æ–ø–∫–µ
        sendButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                sendMessage(messageField.getText());
                messageField.setText("");
            }
        });

        buttonPanel.add(emojiButton);
        buttonPanel.add(attachButton);
        buttonPanel.add(sendButton);

        inputPanel.add(messageField, BorderLayout.CENTER);
        inputPanel.add(buttonPanel, BorderLayout.EAST);

        chatPanel.add(inputPanel, BorderLayout.SOUTH);

        return chatPanel;
    }

    private static JButton createHeaderButton(String text) {
        JButton button = new JButton(text);
        button.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        button.setBackground(new Color(60, 62, 70));
        button.setForeground(Color.WHITE);
        button.setBorder(BorderFactory.createEmptyBorder(8, 12, 8, 12));
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));

        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(new Color(126, 87, 194));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(new Color(60, 62, 70));
            }
        });

        return button;
    }

    private static JButton createInputButton(String text) {
        JButton button = new JButton(text);
        button.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        button.setBackground(new Color(126, 87, 194));
        button.setForeground(Color.WHITE);
        button.setBorder(BorderFactory.createEmptyBorder(10, 15, 10, 15));
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));

        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(new Color(105, 70, 170));
            }

            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(new Color(126, 87, 194));
            }
        });

        return button;
    }

    private static void loadChat(int chatId) {
        currentChat = chatId;
        messagesPanel.removeAll();

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞
        for (String message : chatMessages[chatId]) {
            boolean isOutgoing = message.startsWith("–í—ã:");
            addMessageToPanel(message, isOutgoing);
        }

        messagesPanel.revalidate();
        messagesPanel.repaint();
    }

    private static void sendMessage(String text) {
        if (text.trim().isEmpty()) return;

        String fullMessage = "–í—ã: " + text;
        addMessageToPanel(fullMessage, true);

        // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ 1-2 —Å–µ–∫—É–Ω–¥—ã
        Timer timer = new Timer(1000 + (int)(Math.random() * 1000), new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String[] responses = {
                        "–ê–Ω–Ω–∞ –î–∏–∑–∞–π–Ω–µ—Ä: –û—Ç–ª–∏—á–Ω–∞—è –∏–¥–µ—è!",
                        "–ú–∞–∫—Å –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: –£–∂–µ —Ä–∞–±–æ—Ç–∞—é –Ω–∞–¥ —ç—Ç–∏–º.",
                        "–û–ª—è –ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥: –≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
                        "–ò–≤–∞–Ω –¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫: –ù—É–∂–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–¥ —Ä–µ–ª–∏–∑–æ–º."
                };

                String response = responses[(int)(Math.random() * responses.length)];
                addMessageToPanel(response, false);
            }
        });

        timer.setRepeats(false);
        timer.start();
    }

    private static void addMessageToPanel(String message, boolean isOutgoing) {
        JPanel messagePanel = new JPanel();
        messagePanel.setLayout(new BorderLayout());
        messagePanel.setOpaque(false);
        messagePanel.setBorder(BorderFactory.createEmptyBorder(5, 10, 5, 10));

        JPanel bubblePanel = new JPanel();
        bubblePanel.setLayout(new BoxLayout(bubblePanel, BoxLayout.Y_AXIS));
        bubblePanel.setBorder(BorderFactory.createEmptyBorder(10, 15, 10, 15));

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        if (isOutgoing) {
            bubblePanel.setBackground(new Color(126, 87, 194));
        } else {
            bubblePanel.setBackground(new Color(60, 62, 70));
        }

        bubblePanel.setOpaque(true);
        bubblePanel.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(new Color(80, 82, 90), 1),
                BorderFactory.createEmptyBorder(10, 15, 10, 15)
        ));

        // –†–∞–∑–¥–µ–ª—è–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        String[] parts = message.split(":", 2);
        String sender = parts[0];
        String messageText = parts.length > 1 ? parts[1] : "";

        JLabel senderLabel = new JLabel(sender);
        senderLabel.setFont(new Font("Segoe UI", Font.BOLD, 14));
        senderLabel.setForeground(isOutgoing ? new Color(220, 220, 220) : new Color(170, 200, 240));

        JLabel textLabel = new JLabel(messageText);
        textLabel.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        textLabel.setForeground(Color.WHITE);

        JLabel timeLabel = new JLabel(LocalTime.now().format(DateTimeFormatter.ofPattern("HH:mm")));
        timeLabel.setFont(new Font("Segoe UI", Font.PLAIN, 10));
        timeLabel.setForeground(new Color(180, 180, 190));
        timeLabel.setBorder(BorderFactory.createEmptyBorder(5, 0, 0, 0));

        bubblePanel.add(senderLabel);
        bubblePanel.add(textLabel);
        bubblePanel.add(timeLabel);

        if (isOutgoing) {
            messagePanel.add(bubblePanel, BorderLayout.EAST);
        } else {
            messagePanel.add(bubblePanel, BorderLayout.WEST);
        }

        messagesPanel.add(messagePanel);
        messagesPanel.revalidate();
        messagesPanel.repaint();

        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        JViewport viewport = (JViewport) messagesPanel.getParent().getParent();
        viewport.setViewPosition(new Point(0, messagesPanel.getHeight()));
    }

    // –ö–∞—Å—Ç–æ–º–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è scrollbar
    static class CustomScrollBarUI extends javax.swing.plaf.basic.BasicScrollBarUI {
        @Override
        protected void configureScrollBarColors() {
            this.thumbColor = new Color(80, 82, 90);
            this.trackColor = new Color(42, 44, 51);
        }

        @Override
        protected JButton createDecreaseButton(int orientation) {
            return createZeroButton();
        }

        @Override
        protected JButton createIncreaseButton(int orientation) {
            return createZeroButton();
        }

        private JButton createZeroButton() {
            JButton button = new JButton();
            button.setPreferredSize(new Dimension(0, 0));
            button.setMinimumSize(new Dimension(0, 0));
            button.setMaximumSize(new Dimension(0, 0));
            return button;
        }
    }
}